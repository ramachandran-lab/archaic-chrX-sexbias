#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar  3 17:42:09 2021

@author: egibson
"""

import sys
import pickle
import numpy as np
from os import path


def union_tracts(a):
    # modified from https://stackoverflow.com/a/15273749
    b = []
    for begin, end in sorted(a):
        if b and b[-1][1] >= begin - 1:
            b[-1][1] = max(b[-1][1], end)
        else:
            b.append([begin, end])
    return b


def get_length_spectrum_from_ibd_dict(ibd_dict, return_endpoints=False):
    # !!!: This does not include zeros.

    endpoints_per_pairing = [[(l, r) for l, r in zip(v['left'], v['right'])]
                             for _, v in ibd_dict.items()]
    endpoints = sum(endpoints_per_pairing, [])  # flatten list of endpoint pairs
    tracts = union_tracts(endpoints)
    tract_lengths = [r - l for [l, r] in tracts]
    if return_endpoints:
        return list(tract_lengths), endpoints_per_pairing
    else:
        return list(tract_lengths)


def get_samplewise_spectrum(sample_id, ibd_dict, return_endpoints=False):
    sample_dict = {k: v for k, v in ibd_dict.items() if sample_id in k}
    return get_length_spectrum_from_ibd_dict(sample_dict,
                                             return_endpoints=return_endpoints)


def main():

    # Load IBD tract dictionary from .ibd file (generated by ibd_to_pI.py)
    ibd_filepath = str(sys.argv[1])
    calc_samplewise_tracts = str(sys.argv[2])

    # Define file save name and check if already computed
    filepath_pref, _ = path.splitext(ibd_filepath)
    out_filepath_pref = filepath_pref + '.tracts'
    out_filepath = out_filepath_pref + '.npz'

    if path.exists(out_filepath):
        print(f"{out_filepath} already exists.")
        return

    with open(ibd_filepath, 'rb') as ibd_file:
        ibd_dict = pickle.load(ibd_file)

    # Parse sample IDs from IBD dictionary
    homs, neanderthals = zip(*ibd_dict.keys())  # https://stackoverflow.com/a/7558990
    neanderthals = np.unique(neanderthals)
    homs = np.unique(homs)

    print(f'Loaded .ibd file; found {len(neanderthals)} Neanderthals and {len(homs)} mHom samples.')

    # Calculate tracts and spectra
    introg_spectrum = get_length_spectrum_from_ibd_dict(ibd_dict)
    print('Finished length spectrum.')

    homwise_info = 'not calculated'
    neandwise_info = 'not calculated'

    if calc_samplewise_tracts:
        homwise_info = np.asarray([get_samplewise_spectrum(h, ibd_dict, return_endpoints=True)
                                   for h in homs])
        print('Finished homwise spectrum.')
        neandwise_info = np.asarray([get_samplewise_spectrum(n, ibd_dict, return_endpoints=True)
                                     for n in neanderthals])
        print('Finished Neandwise spectrum.')

    # Save spectra out to file
    np.savez_compressed(out_filepath_pref, introg_spectrum=introg_spectrum,
                        homwise_info=homwise_info, neandwise_info=neandwise_info)

    # # To load file back:
    # loaded = np.load('chr1_h0.0_sscale1_NsNr0.1_mfrac0.6_1939166694854.tracts.npz',
    #                  allow_pickle=True)
    # introg_spectrum = loaded['introg_spectrum']
    # homwise_info = loaded['homwise_info']
    # np.all(loaded['introg_spectrum'] == introg_spectrum)


if __name__ == "__main__":
    main()
